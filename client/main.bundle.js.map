{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/tasks/tasks.component.html","webpack:///./src/app/services/task.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/tasks/tasks.component.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 140\n// module chunks = 2","module.exports = \"<div class=\\\"container\\\">\\n  <h1>My Task List</h1>\\n  <hr>\\n  <tasks></tasks>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 142\n// module chunks = 2","module.exports = \"<form div class=\\\"well\\\" (submit)=\\\"addTask($event)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Add Task...\\\">\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"task-list\\\">\\r\\n    <div *ngFor=\\\"let task of tasks\\\">\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            <input type=\\\"checkbox\\\" [checked]=\\\"task.isDone\\\" (click)=\\\"updateStatus(task)\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n            {{ task.title }} - ( {{ task._id }} )\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <input type=\\\"button\\\" \\r\\n                   value=\\\"Delete\\\" \\r\\n                   class=\\\"btn btn-danger\\\"\\r\\n                   (click)=\\\"deleteTask(task._id)\\\">\\r\\n        </div>\\r\\n        <br><br>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tasks/tasks.component.html\n// module id = 143\n// module chunks = 2","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n    constructor(private http: Http) {\r\n        console.log('Task service initialized...');\r\n    }\r\n\r\n    getTasks() {\r\n        return this.http.get('/api/tasks')\r\n            .map(res => res.json());\r\n    }\r\n\r\n    addTask(newTask) {\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('/api/task', JSON.stringify(newTask), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n\r\n    deleteTask(id) {\r\n        return this.http.delete('/api/task/' + id).map(res => res.json());\r\n    }\r\n\r\n    updateStatus(task) {\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        \r\n        return this.http.put('/api/task/' + task.id, JSON.stringify(task), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/task.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 74;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 74\n// module chunks = 2","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { TaskService } from './services/task.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [TaskService]\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { Task } from '../../Task';\r\n\r\n@Component({\r\n    selector: 'tasks',\r\n    templateUrl: './tasks.component.html'\r\n})\r\nexport class TasksComponent {\r\n    tasks: Task[];\r\n    title: string;\r\n\r\n    constructor(private taskService: TaskService) {\r\n        this.taskService.getTasks().subscribe(\r\n            tasks => {\r\n                this.tasks = tasks;\r\n            }\r\n        );\r\n    }\r\n\r\n    addTask(event) {\r\n        event.preventDefault();\r\n        var newTask = {\r\n            title: this.title,\r\n            isDone: false\r\n        }\r\n\r\n        this.taskService.addTask(newTask).subscribe(\r\n            task => {\r\n                this.tasks.push(task);\r\n                this.title = '';\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteTask(id) {\r\n        var tasks = this.tasks;\r\n        this.taskService.deleteTask(id).subscribe(\r\n            data => {\r\n                if (data.n == 1) {\r\n                    for (var i = 0; i < tasks.length; i++) {\r\n                        if (tasks[i]._id == id ) {\r\n                            tasks.splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    updateStatus(task) {\r\n        var _task = {\r\n            id: task._id,\r\n            title: task.title,\r\n            isDone: !task.isDone\r\n        };\r\n\r\n        this.taskService.updateStatus(_task).subscribe(\r\n            data => {\r\n                task.isDone = !task.isDone;\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tasks/tasks.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}